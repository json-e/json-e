version: 0
tasks:
  - provisionerId: '{{ taskcluster.docker.provisionerId }}'
    workerType: '{{ taskcluster.docker.workerType }}'
    extra:
      github:
        events:
          - pull_request.opened
          - pull_request.synchronize
          - pull_request.reopened
          - push
        branches:
          - master
    payload:
      maxRunTime: 3600
      image: 'node:6'
      command:
        - /bin/bash
        - '--login'
        - '-c'
        - >-
          git clone {{event.head.repo.url}} repo &&
          cd repo &&
          git config advice.detachedHead false &&
          git checkout {{event.head.sha}} &&
          yarn &&
          yarn test
    metadata:
      name: json-e node 6 test run
      description: Run library test suite - node 6
      owner: '{{ event.head.user.email }}'
      source: '{{ event.head.repo.url }}'
  - provisionerId: '{{ taskcluster.docker.provisionerId }}'
    workerType: '{{ taskcluster.docker.workerType }}'
    extra:
      github:
        events:
          - pull_request.opened
          - pull_request.synchronize
          - pull_request.reopened
          - push
        branches:
          - master
    payload:
      maxRunTime: 3600
      image: 'node:8'
      command:
        - /bin/bash
        - '--login'
        - '-c'
        - >-
          git clone {{event.head.repo.url}} repo &&
          cd repo &&
          git config advice.detachedHead false &&
          git checkout {{event.head.sha}} &&
          yarn &&
          yarn test
    metadata:
      name: json-e node 8 test run
      description: Run library test suite - node 8
      owner: '{{ event.head.user.email }}'
      source: '{{ event.head.repo.url }}'
  - provisionerId: '{{ taskcluster.docker.provisionerId }}'
    workerType: '{{ taskcluster.docker.workerType }}'
    extra:
      github:
        events:
          - pull_request.opened
          - pull_request.synchronize
          - pull_request.reopened
          - push
        branches:
          - master
    payload:
      maxRunTime: 3600
      image: 'python:2.7'
      command:
        - /bin/bash
        - '--login'
        - '-c'
        - >-
          git clone {{event.head.repo.url}} repo &&
          cd repo &&
          git config advice.detachedHead false &&
          git checkout {{event.head.sha}} &&
          pip install -e . &&
          python setup.py test
    metadata:
      name: json-e py27 test run
      description: Run library test suite - python 2.7
      owner: '{{ event.head.user.email }}'
      source: '{{ event.head.repo.url }}'
  - provisionerId: '{{ taskcluster.docker.provisionerId }}'
    workerType: '{{ taskcluster.docker.workerType }}'
    extra:
      github:
        events:
          - pull_request.opened
          - pull_request.synchronize
          - pull_request.reopened
          - push
        branches:
          - master
    payload:
      maxRunTime: 3600
      image: 'python:3.6'
      command:
        - /bin/bash
        - '--login'
        - '-c'
        - >-
          git clone {{event.head.repo.url}} repo &&
          cd repo &&
          git config advice.detachedHead false &&
          git checkout {{event.head.sha}} &&
          pip install -e . &&
          python setup.py test
    metadata:
      name: json-e py36 test run
      description: Run library test suite - python 3.6
      owner: '{{ event.head.user.email }}'
      source: '{{ event.head.repo.url }}'
  - provisionerId: '{{ taskcluster.docker.provisionerId }}'
    workerType: '{{ taskcluster.docker.workerType }}'
    extra:
      github:
        env: true
        events:
          - push
        branches:
          - master
    scopes:
      - secrets:get:repo:github.com/taskcluster/json-e
    payload:
      features:
        taskclusterProxy: true
      maxRunTime: 3600
      image: 'node:8'
      command:
        - /bin/bash
        - '--login'
        - '-c'
        - >-
          git clone {{event.head.repo.url}} repo &&
          cd repo &&
          git config advice.detachedHead false &&
          git checkout {{event.head.sha}} &&
          yarn &&
          yarn build-demo &&
          ./deploy.sh
    metadata:
      name: demo site build and deploy
      description: build and publish a new demo site
      owner: '{{ event.head.user.email }}'
      source: '{{ event.head.repo.url }}'
  - provisionerId: '{{ taskcluster.docker.provisionerId }}'
    workerType: '{{ taskcluster.docker.workerType }}'
    extra:
      github:
        events:
          - push
        branches:
          - master
    scopes:
      - auth:aws-s3:read-write:taskcluster-raw-docs/json-e/
    payload:
      maxRunTime: 3600
      image: taskcluster/upload-project-docs:latest
      features:
        taskclusterProxy:
          true
      command:
        - /bin/bash
        - '--login'
        - '-cx'
        - >-
          git clone {{event.head.repo.url}} repo &&
          cd repo &&
          git config advice.detachedHead false &&
          git checkout {{event.head.sha}} &&
          export DEBUG=* DOCS_PROJECT=json-e DOCS_TIER=libraries DOCS_FOLDER=tc-docs DOCS_README=README.md &&
          upload-project-docs
    metadata:
      name: "json-e docs upload"
      description: "Upload documentation for this project"
      owner: '{{ event.head.user.email }}'
      source: '{{ event.head.repo.url }}'
